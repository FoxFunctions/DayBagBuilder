{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../weather-forecast.service\";\nimport * as i2 from \"../hiking-bag.service\";\nimport * as i3 from \"../parks.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/expansion\";\n\nfunction BagBuilderComponent_div_19_mat_expansion_panel_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-expansion-panel\", 14)(1, \"mat-expansion-panel-header\");\n    i0.ɵɵelement(2, \"mat-panel-title\");\n    i0.ɵɵelementStart(3, \"mat-panel-description\", 15);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(5, \"img\", 16);\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const r_r9 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", r_r9.time, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", r_r9.condition.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\"\", r_r9.temp_f, \" \\u00B0F | \", r_r9.chance_of_rain, \"% chance of rain. | \", r_r9.chance_of_snow, \"% chance of snow.\");\n  }\n}\n\nfunction BagBuilderComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-accordion\");\n    i0.ɵɵtemplate(4, BagBuilderComponent_div_19_mat_expansion_panel_4_Template, 8, 5, \"mat-expansion-panel\", 13);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Hourly Forecast for your hike on \", ctx_r0.forecastArray[0].forecast.forecastday[0].date, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.hourlyForecastDay1);\n  }\n}\n\nfunction BagBuilderComponent_div_20_mat_expansion_panel_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-expansion-panel\", 14)(1, \"mat-expansion-panel-header\");\n    i0.ɵɵelement(2, \"mat-panel-title\");\n    i0.ɵɵelementStart(3, \"mat-panel-description\", 15);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(5, \"img\", 16);\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const r_r12 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", r_r12.time, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", r_r12.condition.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\"\", r_r12.temp_f, \" \\u00B0F | \", r_r12.chance_of_rain, \"% chance of rain. | \", r_r12.chance_of_snow, \"% chance of snow.\");\n  }\n}\n\nfunction BagBuilderComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-accordion\");\n    i0.ɵɵtemplate(4, BagBuilderComponent_div_20_mat_expansion_panel_4_Template, 8, 5, \"mat-expansion-panel\", 13);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Hourly Forecast for \", ctx_r1.forecastArray[0].forecast.forecastday[1].date, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.hourlyForecastDay2);\n  }\n}\n\nfunction BagBuilderComponent_div_22_mat_expansion_panel_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-expansion-panel\", 14)(1, \"mat-expansion-panel-header\");\n    i0.ɵɵelement(2, \"mat-panel-title\");\n    i0.ɵɵelementStart(3, \"mat-panel-description\", 15);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(5, \"img\", 16);\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const r_r15 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", r_r15.time, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", r_r15.condition.icon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate3(\"\", r_r15.temp_f, \" \\u00B0F | \", r_r15.chance_of_rain, \"% chance of rain. | \", r_r15.chance_of_snow, \"% chance of snow.\");\n  }\n}\n\nfunction BagBuilderComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-accordion\");\n    i0.ɵɵtemplate(4, BagBuilderComponent_div_22_mat_expansion_panel_4_Template, 8, 5, \"mat-expansion-panel\", 13);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Hourly Forecast for \", ctx_r2.forecastArray[0].forecast.forecastday[2].date, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.hourlyForecastDay3);\n  }\n}\n\nfunction BagBuilderComponent_tr_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const b_r17 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(b_r17.itemName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(b_r17.itemweight);\n  }\n}\n\nfunction BagBuilderComponent_tr_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const b_r18 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(b_r18.itemName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(b_r18.itemweight);\n  }\n}\n\nfunction BagBuilderComponent_p_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"We noticed that your hike is taking place near a park The following activitives are available and you may want to bring additional items\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BagBuilderComponent_p_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"We did not find a park in your area\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction BagBuilderComponent_div_49_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ul\")(2, \"li\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const a_r20 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(a_r20);\n  }\n}\n\nfunction BagBuilderComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, BagBuilderComponent_div_49_div_1_Template, 4, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.activitiesArray);\n  }\n}\n\nexport let BagBuilderComponent = /*#__PURE__*/(() => {\n  class BagBuilderComponent {\n    constructor(weather, hikingBag, parks, router) {\n      this.weather = weather;\n      this.hikingBag = hikingBag;\n      this.parks = parks;\n      this.router = router;\n      this.forecastArray = [];\n      this.locationString = \"\";\n      this.dailyForecast = [];\n      this.hourlyForecastDay1 = [];\n      this.hourlyForecastDay2 = [];\n      this.hourlyForecastDay3 = [];\n      this.hikeTimeStartAsIndex = 100000; // set to a high number for testing purposes in console log \n\n      this.hotHourCount = 0;\n      this.waterUnitsHigh = 0; // this value is expressed as 1 cup of water\n\n      this.waterUnitsLow = 0; // this value is expressed as 1 cup of water\n\n      this.bagItem = [];\n      this.requiredItems = [];\n      this.totalPartySize = this.weather.totalPartySize;\n      this.bagSaveArray = this.hikingBag.bagSaveArray;\n      this.userName = \"\";\n      this.activitiesArray = this.parks.activitiesArray;\n      this.day1TimeArray = [];\n      this.day2TimeArray = [];\n      this.day3TimeArray = [];\n      this.panelOpenState = false;\n      this.totalItemWeight = 0;\n      this.waterWeightLow = 0;\n      this.waterWeightHigh = 0;\n      this.totalWeightLow = 0;\n      this.totalWeightHigh = 0;\n      this.filteredBagsave = [];\n      this.bagSaveWeight = 0;\n      this.caloriesIntake = 0;\n    }\n\n    ngOnInit() {\n      this.ShowForecast();\n      this.GetTimeIndex(); //this.ShowAllBagItems();\n\n      this.ShowBagSavesByUserName();\n    }\n\n    SliceTime() {\n      for (let i = 0; i < this.forecastArray[0].forecast.forecastday[0].hour.length; i++) {\n        this.forecastArray[0].forecast.forecastday[0].hour[i].time = this.forecastArray[0].forecast.forecastday[0].hour[i].time.slice(11);\n        this.forecastArray[0].forecast.forecastday[1].hour[i].time = this.forecastArray[0].forecast.forecastday[1].hour[i].time.slice(11);\n        this.forecastArray[0].forecast.forecastday[2].hour[i].time = this.forecastArray[0].forecast.forecastday[2].hour[i].time.slice(11);\n      }\n    }\n\n    ShowBagSavesByUserName() {\n      this.hikingBag.GetBagSavesByUserName(this.hikingBag.userName).subscribe(response => {\n        this.bagSaveArray = response;\n        this.hikingBag.bagSaveArray = this.bagSaveArray;\n      });\n    }\n\n    ShowAllBagItems() {\n      this.hikingBag.ShowAllBagItems().subscribe(response => {\n        this.bagItem = response;\n        this.getRequiredBagItems();\n        this.ShowBagSavesByUserName();\n      });\n    }\n\n    MoveToCustomItems() {\n      this.router.navigateByUrl(`custom-items`);\n    }\n\n    ShowForecast() {\n      this.weather.GetForecast().subscribe(response => {\n        //creating a daily forecast array\n        this.forecastArray.push(response);\n\n        for (let i = 0; i < this.forecastArray[0].forecast.forecastday.length; i++) {\n          this.dailyForecast.push(this.forecastArray[0].forecast.forecastday[i]);\n        } // creating hourly forecast arrays for each day in the daily array. \n\n\n        for (let i = 0; i < this.forecastArray[0].forecast.forecastday[0].hour.length; i++) {\n          this.hourlyForecastDay1.push(this.forecastArray[0].forecast.forecastday[0].hour[i]);\n          this.hourlyForecastDay2.push(this.forecastArray[0].forecast.forecastday[1].hour[i]);\n          this.hourlyForecastDay3.push(this.forecastArray[0].forecast.forecastday[2].hour[i]);\n        }\n\n        this.PrintForecast();\n        this.weather.forecastArray = this.forecastArray;\n        this.hotHourCalculator();\n        this.waterCalculator();\n        this.ShowAllBagItems();\n        this.SliceTime(); // this.caloriesCalculator();\n      });\n    }\n\n    PrintForecast() {\n      //these for loops will remove the initial items in the array so that the forecast is starting at the desired trip start time\n      for (let i = 0; i < this.hikeTimeStartAsIndex; i++) {\n        if (this.weather.hikeDayStart === \"today\") {\n          this.hourlyForecastDay1.shift();\n        } else if (this.weather.hikeDayStart === \"tomorrow\") {\n          this.hourlyForecastDay2.shift();\n        } else if (this.weather.hikeDayStart === \"the-day-after\") {\n          this.hourlyForecastDay3.shift();\n        }\n      } // this statement will reduce the daily forecast array for day 1 to only show the forecast for your trips duration\n\n\n      this.hourlyForecastDay1.splice(this.weather.tripDuration); // accounting for all conditions with a trip beginning today. if hikeDayStart is today and hikeTimestartAsIndex + tripDuration is < 23, the trip will not go into the second day or and those arrays will be set to empty\n\n      if (this.weather.hikeDayStart === \"today\") {\n        if (this.hikeTimeStartAsIndex + this.weather.tripDuration > 23 && this.hikeTimeStartAsIndex + this.weather.tripDuration < 47) {\n          this.hourlyForecastDay2.splice(this.hikeTimeStartAsIndex + this.weather.tripDuration - 24);\n          this.hourlyForecastDay3 = [];\n        } else if (this.hikeTimeStartAsIndex + this.weather.tripDuration < 23) {\n          this.hourlyForecastDay2 = [];\n          this.hourlyForecastDay3 = [];\n        } else if (this.hikeTimeStartAsIndex + this.weather.tripDuration > 47) {\n          this.hourlyForecastDay3.splice(this.hikeTimeStartAsIndex + this.weather.tripDuration - 48);\n        }\n      } // accounting for all conditions with a trip beginning tomororw\n\n\n      if (this.weather.hikeDayStart === \"tomorrow\") {\n        this.hourlyForecastDay1 = [];\n        this.hourlyForecastDay2.splice(this.weather.tripDuration);\n\n        if (this.hikeTimeStartAsIndex + this.weather.tripDuration > 23 && this.hikeTimeStartAsIndex + this.weather.tripDuration < 47) {\n          this.hourlyForecastDay3.splice(this.hikeTimeStartAsIndex + this.weather.tripDuration - 24);\n        } else if (this.hikeTimeStartAsIndex + this.weather.tripDuration < 23) {\n          this.hourlyForecastDay3 = [];\n        }\n      } // accounting for limited conditions that may occur with a trip starting the-day-after\n\n\n      if (this.weather.hikeDayStart === \"the-day-after\") {\n        this.hourlyForecastDay1 = [];\n        this.hourlyForecastDay2 = [];\n        this.hourlyForecastDay3.splice(this.weather.tripDuration);\n      }\n    } // creating a variable for the index of the hourly array. This is used to display only the correct forecast for the user's trip info.\n\n\n    GetTimeIndex() {\n      if (this.weather.hikeStringStart === \"00:00\") {\n        this.hikeTimeStartAsIndex = 0;\n      } else if (this.weather.hikeStringStart === \"01:00\") {\n        this.hikeTimeStartAsIndex = 1;\n      } else if (this.weather.hikeStringStart === \"02:00\") {\n        this.hikeTimeStartAsIndex = 2;\n      } else if (this.weather.hikeStringStart === \"03:00\") {\n        this.hikeTimeStartAsIndex = 3;\n      } else if (this.weather.hikeStringStart === \"04:00\") {\n        this.hikeTimeStartAsIndex = 4;\n      } else if (this.weather.hikeStringStart === \"05:00\") {\n        this.hikeTimeStartAsIndex = 5;\n      } else if (this.weather.hikeStringStart === \"06:00\") {\n        this.hikeTimeStartAsIndex = 6;\n      } else if (this.weather.hikeStringStart === \"07:00\") {\n        this.hikeTimeStartAsIndex = 7;\n      } else if (this.weather.hikeStringStart === \"08:00\") {\n        this.hikeTimeStartAsIndex = 8;\n      } else if (this.weather.hikeStringStart === \"09:00\") {\n        this.hikeTimeStartAsIndex = 9;\n      } else if (this.weather.hikeStringStart === \"10:00\") {\n        this.hikeTimeStartAsIndex = 10;\n      } else if (this.weather.hikeStringStart === \"11:00\") {\n        this.hikeTimeStartAsIndex = 11;\n      } else if (this.weather.hikeStringStart === \"12:00\") {\n        this.hikeTimeStartAsIndex = 12;\n      } else if (this.weather.hikeStringStart === \"13:00\") {\n        this.hikeTimeStartAsIndex = 13;\n      } else if (this.weather.hikeStringStart === \"14:00\") {\n        this.hikeTimeStartAsIndex = 14;\n      } else if (this.weather.hikeStringStart === \"15:00\") {\n        this.hikeTimeStartAsIndex = 15;\n      } else if (this.weather.hikeStringStart === \"16:00\") {\n        this.hikeTimeStartAsIndex = 16;\n      } else if (this.weather.hikeStringStart === \"17:00\") {\n        this.hikeTimeStartAsIndex = 17;\n      } else if (this.weather.hikeStringStart === \"18:00\") {\n        this.hikeTimeStartAsIndex = 18;\n      } else if (this.weather.hikeStringStart === \"19:00\") {\n        this.hikeTimeStartAsIndex = 19;\n      } else if (this.weather.hikeStringStart === \"20:00\") {\n        this.hikeTimeStartAsIndex = 20;\n      } else if (this.weather.hikeStringStart === \"21:00\") {\n        this.hikeTimeStartAsIndex = 21;\n      } else if (this.weather.hikeStringStart === \"22:00\") {\n        this.hikeTimeStartAsIndex = 22;\n      } else if (this.weather.hikeStringStart === \"23:00\") {\n        this.hikeTimeStartAsIndex = 23;\n      }\n    } // function that totals the amount of hours where the temperature is above 85. We use this for recommending the appropriate amount of water for a trip\n\n\n    hotHourCalculator() {\n      if (this.weather.hikeDayStart === \"today\") {\n        if (this.weather.tripDuration + this.hikeTimeStartAsIndex < 23) {\n          for (let i = 0; i < this.hourlyForecastDay1.length; i++) {\n            if (this.hourlyForecastDay1[i].temp_f > 85) {\n              this.hotHourCount++;\n            }\n          }\n        } else if (this.weather.tripDuration + this.hikeTimeStartAsIndex > 23 && this.weather.tripDuration + this.hikeTimeStartAsIndex < 47) {\n          for (let i = 0; i < this.hourlyForecastDay1.length; i++) {\n            if (this.hourlyForecastDay1[i].temp_f > 85) {\n              this.hotHourCount++;\n            }\n          }\n\n          for (let i = 0; i < this.hourlyForecastDay2.length; i++) {\n            if (this.hourlyForecastDay2[i].temp_f > 85) {\n              this.hotHourCount++;\n            }\n          }\n        } else if (this.weather.tripDuration + this.hikeTimeStartAsIndex > 47) {\n          for (let i = 0; i < this.hourlyForecastDay1.length; i++) {\n            if (this.hourlyForecastDay1[i].temp_f > 85) {\n              this.hotHourCount++;\n            }\n          }\n\n          for (let i = 0; i < this.hourlyForecastDay2.length; i++) {\n            if (this.hourlyForecastDay2[i].temp_f > 85) {\n              this.hotHourCount++;\n            }\n          }\n\n          for (let i = 0; i < this.hourlyForecastDay3.length; i++) {\n            if (this.hourlyForecastDay3[i].temp_f > 85) {\n              this.hotHourCount++;\n            }\n          }\n        }\n      } else if (this.weather.hikeDayStart === \"tomorrow\") {\n        if (this.hikeTimeStartAsIndex + this.weather.tripDuration < 23) {\n          for (let i = 0; i < this.hourlyForecastDay2.length; i++) {\n            if (this.hourlyForecastDay2[i].temp_f > 85) {\n              this.hotHourCount++;\n            }\n          }\n        } else if (this.hikeTimeStartAsIndex + this.weather.tripDuration > 23 && this.hikeTimeStartAsIndex + this.weather.tripDuration < 47) {\n          for (let i = 0; i < this.hourlyForecastDay2.length; i++) {\n            if (this.hourlyForecastDay2[i].temp_f > 85) {\n              this.hotHourCount++;\n            }\n          }\n\n          for (let i = 0; i < this.hourlyForecastDay3.length; i++) {\n            if (this.hourlyForecastDay3[i].temp_f > 85) {\n              this.hotHourCount++;\n            }\n          }\n        } else if (this.hikeTimeStartAsIndex + this.weather.tripDuration > 47) {\n          for (let i = 0; i < this.hourlyForecastDay3.length; i++) {\n            if (this.hourlyForecastDay3[i].temp_f > 85) {\n              this.hotHourCount++;\n            }\n          }\n        }\n      } else if (this.weather.hikeDayStart === \"the-day-after\") {\n        for (let i = 0; i < this.hourlyForecastDay3.length; i++) {\n          if (this.hourlyForecastDay3[i].temp_f > 85) {\n            this.hotHourCount++;\n          }\n        }\n      }\n    } // calculates the amount of water that a group or solo party would need on their hiking trip.\n\n\n    waterCalculator() {\n      this.waterUnitsHigh = (this.weather.tripDuration - this.hotHourCount) * 2 + this.hotHourCount * 3;\n      this.waterUnitsLow = this.waterUnitsHigh / 2;\n    }\n\n    caloriesCalculator() {\n      this.caloriesIntake = this.totalWeightHigh * 2.5 * this.weather.tripDuration + 3000;\n    } //this series of functions are used to make bag item recomendations based on a variety of weather conditions. The conditions are daily averages and not hourly.\n\n\n    isColdWeather1() {\n      if (this.dailyForecast[0].day.avgtemp_f <= 46) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isColdWeather2() {\n      if (this.dailyForecast[1].day.avgtemp_f <= 46) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isColdWeather3() {\n      if (this.dailyForecast[2].day.avgtemp_f <= 46) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isHotWeather1() {\n      if (this.dailyForecast[0].day.avgtemp_f >= 85) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isHotWeather2() {\n      if (this.dailyForecast[1].day.avgtemp_f >= 85) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isHotWeather3() {\n      if (this.dailyForecast[2].day.avgtemp_f >= 85) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isHighUv1() {\n      if (this.dailyForecast[0].day.uv >= 5) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isHighUv2() {\n      if (this.dailyForecast[1].day.uv >= 5) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isHighUv3() {\n      if (this.dailyForecast[2].day.uv >= 5) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isGoingToRain1() {\n      if (this.dailyForecast[0].day.daily_chance_of_rain >= 40) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isGoingToRain2() {\n      if (this.dailyForecast[1].day.daily_chance_of_rain >= 40) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isGoingToRain3() {\n      if (this.dailyForecast[2].day.daily_chance_of_rain >= 40) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isGoingToSnow1() {\n      if (this.dailyForecast[0].day.daily_chance_of_snow >= 40) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isGoingToSnow2() {\n      if (this.dailyForecast[1].day.daily_chance_of_snow >= 40) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    isGoingToSnow3() {\n      if (this.dailyForecast[2].day.daily_chance_of_snow >= 40) {\n        return true;\n      } else {\n        return false;\n      }\n    } // this function will populate the requiredItems array with the items we are recommending for a hiking trip\n\n\n    getRequiredBagItems() {\n      if (this.isGoingToSnow1()) {\n        if (this.weather.hikeDayStart === \"today\") {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forSnow && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n      }\n\n      if (this.isGoingToSnow2()) {\n        if (this.weather.hikeDayStart === \"today\" && this.hikeTimeStartAsIndex + this.weather.tripDuration > 23) {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forSnow && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        } else if (this.weather.hikeDayStart === \"tomorrow\") {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forSnow && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n      }\n\n      if (this.isGoingToSnow3()) {\n        if (this.weather.hikeDayStart === \"today\" && this.hikeTimeStartAsIndex + this.weather.tripDuration > 47) {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forSnow && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n\n        if (this.weather.hikeDayStart === \"tomorrow\" && this.hikeTimeStartAsIndex + this.weather.tripDuration > 23) {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forSnow && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n\n        if (this.weather.hikeDayStart === \"the-day-after\") {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forSnow && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n      }\n\n      if (this.isGoingToRain1()) {\n        if (this.weather.hikeDayStart === \"today\") {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forRain && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n      }\n\n      if (this.isGoingToRain2()) {\n        if (this.weather.hikeDayStart === \"today\" && this.hikeTimeStartAsIndex + this.weather.tripDuration > 23) {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forRain && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        } else if (this.weather.hikeDayStart === \"tomorrow\") {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forRain && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n      }\n\n      if (this.isGoingToRain3()) {\n        if (this.weather.hikeDayStart === \"today\" && this.hikeTimeStartAsIndex + this.weather.tripDuration > 47) {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forRain && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n\n        if (this.weather.hikeDayStart === \"tomorrow\" && this.hikeTimeStartAsIndex + this.weather.tripDuration > 23) {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forRain && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n\n        if (this.weather.hikeDayStart === \"the-day-after\") {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forRain && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n      }\n\n      if (this.isHighUv1()) {\n        if (this.weather.hikeDayStart === \"today\") {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forSunny && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n      }\n\n      if (this.isHighUv2()) {\n        if (this.weather.hikeDayStart === \"today\" && this.hikeTimeStartAsIndex + this.weather.tripDuration > 23) {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forSunny && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        } else if (this.weather.hikeDayStart === \"tomorrow\") {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forSunny && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n      }\n\n      if (this.isHighUv3()) {\n        if (this.weather.hikeDayStart === \"today\" && this.hikeTimeStartAsIndex + this.weather.tripDuration > 47) {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forSunny && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n\n        if (this.weather.hikeDayStart === \"tomorrow\" && this.hikeTimeStartAsIndex + this.weather.tripDuration > 23) {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forSunny && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n\n        if (this.weather.hikeDayStart === \"the-day-after\") {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forSunny && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n      }\n\n      if (this.isHotWeather1()) {\n        if (this.weather.hikeDayStart === \"today\") {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forHot && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n      }\n\n      if (this.isHotWeather2()) {\n        if (this.weather.hikeDayStart === \"today\" && this.hikeTimeStartAsIndex + this.weather.tripDuration > 23) {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forHot && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        } else if (this.weather.hikeDayStart === \"tomorrow\") {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forSnow && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n      }\n\n      if (this.isHotWeather3()) {\n        if (this.weather.hikeDayStart === \"today\" && this.hikeTimeStartAsIndex + this.weather.tripDuration > 47) {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forSnow && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n\n        if (this.weather.hikeDayStart === \"tomorrow\" && this.hikeTimeStartAsIndex + this.weather.tripDuration > 23) {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forHot && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n\n        if (this.weather.hikeDayStart === \"the-day-after\") {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forHot && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n      }\n\n      if (this.isColdWeather1()) {\n        if (this.weather.hikeDayStart === \"today\") {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forCold && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n      }\n\n      if (this.isColdWeather2()) {\n        if (this.weather.hikeDayStart === \"today\" && this.hikeTimeStartAsIndex + this.weather.tripDuration > 23) {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forCold && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        } else if (this.weather.hikeDayStart === \"tomorrow\") {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forCold && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n      }\n\n      if (this.isColdWeather3()) {\n        if (this.weather.hikeDayStart === \"today\" && this.hikeTimeStartAsIndex + this.weather.tripDuration > 47) {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forCold && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n\n        if (this.weather.hikeDayStart === \"tomorrow\" && this.hikeTimeStartAsIndex + this.weather.tripDuration > 23) {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forCold && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n\n        if (this.weather.hikeDayStart === \"the-day-after\") {\n          for (let i = 0; i < this.bagItem.length; i++) {\n            if (this.bagItem[i].forCold && !this.requiredItems.includes(this.bagItem[i])) {\n              this.requiredItems.push(this.bagItem[i]);\n            }\n          }\n        }\n      }\n\n      this.filteredBagsave = this.hikingBag.bagSaveArray.filter(x => x.userName == this.hikingBag.userName);\n      console.log(this.filteredBagsave);\n\n      for (let i = 0; i < this.filteredBagsave.length; i++) {\n        this.bagSaveWeight += this.filteredBagsave[i].itemweight;\n      }\n\n      for (let i = 0; i < this.requiredItems.length; i++) {\n        this.totalItemWeight += this.requiredItems[i].itemweight;\n      }\n\n      this.waterWeightLow = this.waterUnitsLow * 8;\n      this.waterWeightHigh = this.waterUnitsHigh * 8;\n      this.totalWeightLow = Math.round((this.totalItemWeight + this.waterWeightLow + this.bagSaveWeight) / 16);\n      this.totalWeightHigh = Math.round((this.totalItemWeight + this.waterWeightHigh + this.bagSaveWeight) / 16);\n      this.caloriesIntake = this.totalWeightHigh * 2.5 * this.weather.tripDuration + 3000;\n    }\n\n  }\n\n  BagBuilderComponent.ɵfac = function BagBuilderComponent_Factory(t) {\n    return new (t || BagBuilderComponent)(i0.ɵɵdirectiveInject(i1.WeatherForecastService), i0.ɵɵdirectiveInject(i2.HikingBagService), i0.ɵɵdirectiveInject(i3.ParksService), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  BagBuilderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BagBuilderComponent,\n    selectors: [[\"app-bag-builder\"]],\n    decls: 55,\n    vars: 22,\n    consts: [[\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1\"], [\"rel\", \"stylesheet\", \"href\", \"https://www.w3schools.com/w3css/4/w3.css\"], [1, \"currentConditionsContainer\"], [1, \"w3-container\"], [1, \"w3-card-4\", 2, \"width\", \"70%\"], [1, \"w3-container\", \"w3-light-grey\"], [1, \"w3-container\", 2, \"background-image\", \"url('assets/images//isSunny.png')\"], [\"width\", \"100\", \"height\", \"auto\", 1, \"center\", 3, \"src\"], [1, \"dailyForecast\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"], [1, \"weatherHeader\"], [\"hideToggle\", \"\", 4, \"ngFor\", \"ngForOf\"], [\"hideToggle\", \"\"], [1, \"time\"], [\"width\", \"50\", \"height\", \"auto\", 3, \"src\"]],\n    template: function BagBuilderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"title\");\n        i0.ɵɵtext(1, \"W3.CSS\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"meta\", 0)(3, \"link\", 1);\n        i0.ɵɵelementStart(4, \"body\")(5, \"div\", 2)(6, \"div\", 3)(7, \"div\", 4)(8, \"header\", 5)(9, \"h3\");\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 6);\n        i0.ɵɵelement(12, \"img\", 7);\n        i0.ɵɵelementStart(13, \"p\", 8);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"p\", 8);\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\", 8);\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵtemplate(19, BagBuilderComponent_div_19_Template, 5, 2, \"div\", 9);\n        i0.ɵɵtemplate(20, BagBuilderComponent_div_20_Template, 5, 2, \"div\", 9);\n        i0.ɵɵelement(21, \"p\");\n        i0.ɵɵtemplate(22, BagBuilderComponent_div_22_Template, 5, 2, \"div\", 9);\n        i0.ɵɵelement(23, \"br\")(24, \"head\");\n        i0.ɵɵelementStart(25, \"body\")(26, \"div\")(27, \"table\")(28, \"tr\")(29, \"th\");\n        i0.ɵɵtext(30, \"Item Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"th\");\n        i0.ɵɵtext(32, \"Item Weight (ounces)\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"tr\")(34, \"td\");\n        i0.ɵɵtext(35);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"td\");\n        i0.ɵɵtext(37);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(38, \"tr\")(39, \"td\");\n        i0.ɵɵtext(40);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(41, BagBuilderComponent_tr_41_Template, 5, 2, \"tr\", 10);\n        i0.ɵɵtemplate(42, BagBuilderComponent_tr_42_Template, 5, 2, \"tr\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"p\");\n        i0.ɵɵtext(44);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(45, \"br\")(46, \"p\");\n        i0.ɵɵtemplate(47, BagBuilderComponent_p_47_Template, 2, 0, \"p\", 9);\n        i0.ɵɵtemplate(48, BagBuilderComponent_p_48_Template, 2, 0, \"p\", 9);\n        i0.ɵɵtemplate(49, BagBuilderComponent_div_49_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelement(50, \"p\");\n        i0.ɵɵelementStart(51, \"p\");\n        i0.ɵɵtext(52, \"Would you like to add custom items to your list?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function BagBuilderComponent_Template_button_click_53_listener() {\n          return ctx.MoveToCustomItems();\n        });\n        i0.ɵɵtext(54, \"Add More items\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵtextInterpolate2(\" Current conditions in \", ctx.forecastArray[0].location.name, \", \", ctx.forecastArray[0].location.region, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.forecastArray[0].current.condition.icon, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.forecastArray[0].current.condition.text);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.forecastArray[0].current.temp_f, \" \\u00B0F\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\" Wind: \", ctx.forecastArray[0].current.wind_mph, \" mph \", ctx.forecastArray[0].current.wind_dir, \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hourlyForecastDay1.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hourlyForecastDay2.length > 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.hourlyForecastDay3.length > 0);\n        i0.ɵɵadvance(13);\n        i0.ɵɵtextInterpolate2(\"Water: Between \", ctx.waterUnitsLow, \" and \", ctx.waterUnitsHigh, \" cups hourly per person \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"Range: \", ctx.waterWeightLow, \"-\", ctx.waterWeightHigh, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.caloriesIntake, \" Calories per person\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.requiredItems);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.bagSaveArray);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"Pack Total Weight Range: \", ctx.totalWeightLow, \"-\", ctx.totalWeightHigh, \" pounds.\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.activitiesArray.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.activitiesArray.length === 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.activitiesArray.length > 0);\n      }\n    },\n    directives: [i5.NgIf, i6.MatAccordion, i5.NgForOf, i6.MatExpansionPanel, i6.MatExpansionPanelHeader, i6.MatExpansionPanelTitle, i6.MatExpansionPanelDescription],\n    styles: [\".example-accordion[_ngcontent-%COMP%]{display:block;max-width:500px}.example-accordion-item[_ngcontent-%COMP%]{display:block;border:solid 1px #ccc}.example-accordion-item[_ngcontent-%COMP%] + .example-accordion-item[_ngcontent-%COMP%]{border-top:none}.example-accordion-item-header[_ngcontent-%COMP%]{display:flex;align-content:center;justify-content:space-between}.example-accordion-item-description[_ngcontent-%COMP%]{font-size:.85em;color:#eb0a0a}.example-accordion-item-header[_ngcontent-%COMP%], .example-accordion-item-body[_ngcontent-%COMP%]{padding:16px}.example-accordion-item-header[_ngcontent-%COMP%]:hover{cursor:pointer;background-color:#ea1111}.example-accordion-item[_ngcontent-%COMP%]:first-child{border-top-left-radius:4px;border-top-right-radius:4px}.example-accordion-item[_ngcontent-%COMP%]:last-child{border-bottom-left-radius:4px;border-bottom-right-radius:4px}.time[_ngcontent-%COMP%]{color:#00f;color:#000;font-size:small;display:flex;justify-content:center;padding-right:300px}.weatherHeader[_ngcontent-%COMP%], .dailyForecast[_ngcontent-%COMP%]{text-align:center}.center[_ngcontent-%COMP%]{display:block;margin-left:auto;margin-right:auto}.currentConditionsContainer[_ngcontent-%COMP%]{padding-left:300px}\", \"table[_ngcontent-%COMP%] {\\n      font-family: arial, sans-serif;\\n      border-collapse: collapse;\\n      width: 100%;\\n    }\\n    \\n    td[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n      border: 1px solid #dddddd;\\n      text-align: left;\\n      padding: 8px;\\n    }\\n    \\n    tr[_ngcontent-%COMP%]:nth-child(even) {\\n      background-color: #dddddd;\\n    }\"]\n  });\n  return BagBuilderComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}